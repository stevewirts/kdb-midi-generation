this is an attempt at describing an algorithm that generates
streams of music lines as specified by george garzones
Triadic Chromatic Approach
http://www.georgegarzone.com/index1.html


computer theory for music people
    computer people always count things starting at 0
    * is multiple or "times"

music theory for computer people
    basics
        -octave is a scientific term
        -each octave is 2 * frequency of the next below
            C3 130.81Hz 
            C2  65.41Hz
            C1  32.70Hz
            C0  16.35Hz
        -musical cultural dichotomy 
            -western music 12 divisions per octave (12 semitones)
            -eastern music (Arab tone system) 24 divisions per octave
            
    Musical Instrument Digital Interface (midi)
        -semitone (half step) is the atomic unit
        -an octave has 12 semitones, music is base 12
        -notes are integers between the audible lowest and highest notes 
        -C is the name of the lowest note
            1 octave ((#)sharp (b)flat)
                0   1       2   3       4  5   6       7   8       9  10      11 
                C  (C# Db)  D  (D# Eb)  E  F  (F# Gb)  G  (G# Ab)  A  (A# Bb) B
        -C(octave 0) = 0
            c1 = 12
            c2 = 24
            etc
        -bosendofer imperial piano has 8.5 octaves 0 - 102
            midi accomodates 0 - 128
        -western music, a practical range is 60 - 84
            2 octaves easy to read in sheet music, easy to play on saxophone
        -an interval is a number of semitones (a distance) between 2 notes
        -a triad is a cluster of 3 notes - root, middle, top; (2 stacked intervals)

a triad is three notes stacked on one another
    -the specific distances between its 3 notes determine its QUALITY
    -this examples illustrates the 4 basic triad types with root C
       
    quality        music notes     midi note values   interval sizes
    C Major         C E  G           0 4 7               4 3  
    C Minor         C Eb G           0 3 7               3 4 
    C Diminished    C Eb Gb          0 3 6               3 3
    C Augmented     C E  Ab          0 4 8               4 4


11  
10         
 9    Major       Minor       Diminished       Augmented  
 8  -------------------------------------------| Ab
 7  --| G --------| G                          |   
 6  --| ----------|-----------| Gb             |
 5    |           |           |                |
 4  --| E --------|-----------|----------------| E
 3  --| ----------| Eb -------| Eb             |
 2    |           |           |                |
 1    |           |           |                |
 0  --- C --------| C --------| C -------------| C   
                              

an inversion is when the notes of a triad are rearranged with respect to which one is on bottom
    -a triad has 3 notes so it has 3 possible inversions
    -see this as a piano layed out from top to bottom, low note at the bottom
    -three stacked inversions with the root as the bottom note is called an INVERSION LADDER
    -there are 5 notes in an inversion ladder
        
        4    middle                E
        3    root             C    C
        2    top         G    G    G - 3nd inversion top (root up an octave) (middle up an octave)
        1    middle      E    G - 2nd inversion middle (root up an octave) (top up an octave) 
        0    root        C - 1st inversion root middle top 

    so
        3rd inversion   2 3 4
        2nd inversion   1 2 3
        1st inversion   0 1 2


Triadic Chromatic Approach basic rules
    construct music "lines" by connecting random triads of the same quality
    random means to select at random an inversion and a note sequence 
    * you can repeat an inversion but note ordering within the inversion must be different from the previous triad
    consecutive triads start on a note that is up or down 1 semitone from last note of the previous triad
        if the last note of a triad is G, the next triad must start on a Gb(F#) or a Ab(G#)
        these notes (Gb or Ab) can be the root middle or top of the next triad

there are 18 possible note sequences for 1 triad of any quality
    these are called INVERSION LADDER SEQUENCE INDEXES
    
    1st inversion          2nd inversion          3rd inversion               
        0 1 2                  1 2 3                  2 3 4
        0 2 1                  1 3 2                  2 4 3
        1 0 2                  2 1 3                  3 2 4
        1 2 0                  2 3 1                  3 4 2
        2 0 1                  3 1 2                  4 2 3
        2 1 0                  3 2 1                  4 3 2


TCA algorithm inputs (reasonable defaults in parens)
    1) starting note (72)       // middle c
    2) a triad (4 3)            // major "happy" sounding triad expressed as 2 stacked interval sizes
    3) count of repeating triads per output line (8)
    4) the (step) size (1 semitone) between successive triads; up or down at random
    5) high low bounds (60 85)  // any line that goes above or below this range is disqualified

-----------------

TCA: pick N random successive triads, offset up/down by (step) semitones, don't repeat sequence within an inversion

1) select a triad quality, lets say major 4 3
    compute the inversion ladder
        ladder:{(0;x 0;sum x;12;12+x 0)}
        tq:4 3
        il:ladder tq
            4 middle       12 + tq[1]        = 16   
            3 root         12                = 12   
            2 top          t1[0] + tq[1]     =  7
            1 middle       tq[1]             =  4
            0 root         0                 =  0

2) compute the inversion ladder sequence indexes
    prm:{x{,/(>:'t=/:t:*x)@\:x:0,'1+x}/,!0}  // permutations
    ilsi: raze til[3]+\:prm 3
    
        0 1 2
        0 2 1
        1 0 2
        1 2 0
        2 0 1
        2 1 0
        1 2 3
        1 3 2
        2 1 3
        2 3 1
        3 1 2
        3 2 1
        2 3 4
        2 4 3
        3 2 4
        3 4 2
        4 2 3
        4 3 2

3) apply the 18 inversion ladder sequence indexes to our inversion ladder il (0 4 7 12 16)
    il @ ilsi

        0  4  7
        0  7  4
        4  0  7
        4  7  0
        7  0  4
        7  4  0

        4  7  12
        4  12 7
        7  4  12
        7  12 4
        12 4  7
        12 7  4

        7  12 16
        7  16 12
        12 7  16
        12 16 7
        16 7  12
        16 12 7

4) compute the INVERSION LADDER INTERVALS from this
    ili:{1_ deltas x} each il@ilsi

        4  3
        7  -3
        -4 7
        3  -7
        -7 4
        -3 -4

        3  5
        8  -5
        -3 8
        5  -8
        -8 3
        -5 -3

        5  4
        9  -4
        -5 9
        4  -9
        -9 5
        -4 -5


5) a random triad is now (-1 or 1) and one of the inversion ladder interval from (4)
        
         1 8 -5
            or
        -1 8 -5


6) repeat (4), 8 times without repeating the same inversion ladder interval
         flip (enlist 8?1 -1),flip -8 ? ili

        -1 -9 5
        -1 -3 8
        1  5  -8
        -1 -3 -4
        -1 -7 4
        -1 -4 7
        1  -5 9
        -1 3  -7

7) raze and scan the sums, replace the first value with starting note value
      sums 72, 1 _ raze flip (enlist 8?1 -1),flip -8 ? ili
        
        72 67 76 77 74 70 71 75 78 79 70 75 74 67 71 72 77 69 68 71 64 65 74 70

    
generateline:{sums 72,1 _ raze flip (enlist 8?1 -1),flip -8 ? {1_ deltas x} each ladder[triads x]@ilsi}

8) save to disk as a midi file
    `:line.mid 1: midi generateline`major

9) reject for range and ending note, repeat a zillion times







